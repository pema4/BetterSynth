<UserControl x:Class="BetterSynth.UI.Knob"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d"
             DataContext="{Binding RelativeSource={RelativeSource Self}}">
    <UserControl.Resources>
        <Style x:Key="RoundedLabel" TargetType="Label">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                        BorderThickness="{TemplateBinding BorderThickness}" 
                                        Background="{TemplateBinding Background}" 
                                        Padding="{TemplateBinding Padding}" 
                                        SnapsToDevicePixels="true"
                                        Opacity="1"
                                        CornerRadius="3">
                            <ContentPresenter 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                RecognizesAccessKey="True" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <StackPanel VerticalAlignment="Top" HorizontalAlignment="Center">
        <Canvas Width="40" Height="40" HorizontalAlignment="Center">
            <Path StrokeThickness="4" VerticalAlignment="Top" HorizontalAlignment="Center"
                  Stroke="{Binding Stroke, FallbackValue=Red}" Width="40" Height="40">
                <Path.Data>
                    <PathGeometry>
                        <PathFigure x:Name="coloredArcFigure" StartPoint="8.68629150101524,31.31370849898476">
                            <ArcSegment x:Name="coloredArc"
                            Size="16,16"
                            Point="8.68629150101524,31.31370849898476"
                            SweepDirection="Clockwise" />
                        </PathFigure>
                    </PathGeometry>
                </Path.Data>
            </Path>
            <Grid x:Name="knobFigure" HorizontalAlignment="Center" VerticalAlignment="Top"
                  Height="40" Width="40" RenderTransformOrigin="0.5,0.5"
                  MouseDown="Ellipse_MouseDown" MouseUp="Ellipse_MouseUp" MouseMove="Ellipse_MouseMove">
                <Ellipse x:Name="knobEllipse" Width="32" Height="32">
                    <Ellipse.Fill>
                        <RadialGradientBrush>
                            <GradientStop Color="Black" Offset="1.5"/>
                            <GradientStop Color="Gray" Offset="0.7"/>
                        </RadialGradientBrush>
                    </Ellipse.Fill>
                </Ellipse>
                <Rectangle Margin="14,24,23,10" Fill="{Binding Path=Stroke, FallbackValue=Red}">
                    <Rectangle.RenderTransform>
                        <RotateTransform Angle="45"/>
                    </Rectangle.RenderTransform>
                </Rectangle>
                <Grid.RenderTransform>
                    <RotateTransform x:Name="rotateTransform"/>
                </Grid.RenderTransform>
            </Grid>
        </Canvas>
        <Popup x:Name="valuePopup" AllowsTransparency="True" Placement="Custom"
               CustomPopupPlacementCallback="PopupPlacementCallback">
            <Popup.Style>
                <Style TargetType="Popup">
                    <Setter Property="IsOpen" Value="False"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=IsMouseOver, ElementName=knobFigure}"
                                         Value="True">
                            <Setter Property="IsOpen" Value="True"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=knobFigure, Path=IsMouseCaptured}">
                            <Setter Property="IsOpen" Value="True"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Popup.Style>
            <Label Style="{StaticResource RoundedLabel}" Background="LightGray" BorderBrush="Gray" BorderThickness="2">
                <Label.Content>
                    <TextBlock Margin="0,-1,0,0">
                        <TextBlock.Text>
                            <Binding Path="DisplayValue" FallbackValue="100 semitones"/>
                        </TextBlock.Text>
                    </TextBlock>
                </Label.Content>
            </Label>
        </Popup>
    </StackPanel>
</UserControl>
